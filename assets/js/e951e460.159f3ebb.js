"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[421],{5716:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>g,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var a=o(5893),t=o(1151),l=o(4866),r=o(5162);const s={sidebar_position:2,id:"import",title:"What to Import"},i="What to Import",c={id:"cats/import",title:"What to Import",description:"Most Places",source:"@site/../generated-docs/docs/cats/import.md",sourceDirName:"cats",slug:"/cats/import",permalink:"/docs/cats/import",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"import",title:"What to Import"},sidebar:"theSidebar",previous:{title:"Get LoggerF",permalink:"/docs/cats/"},next:{title:"Log - Cats",permalink:"/docs/cats/log"}},g={},u=[{value:"Most Places",id:"most-places",level:2},{value:"For Main Method",id:"for-main-method",level:2},{value:"<code>Log[F]</code> Instance",id:"logf-instance",level:3},{value:"Instances for Effectie",id:"instances-for-effectie",level:3},{value:"<code>CanLog</code> (<code>Logger</code>)",id:"canlog-logger",level:3},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"what-to-import",children:"What to Import"}),"\n",(0,a.jsx)(n.h2,{id:"most-places",children:"Most Places"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import loggerf.core._\nimport loggerf.syntax.all._\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import loggerf.core._ // for Log\nimport loggerf.syntax.all._ // for log(),  log_(), logS(), logS_(), etc.\n\ndef foo[F[_]: Log](n: Int): F[int] =\n  for {\n    n2 <- bar(n).log(n2 => info(s"n2: $n2"))\n  } yield n + n2\n'})}),"\n",(0,a.jsx)(n.h2,{id:"for-main-method",children:"For Main Method"}),"\n",(0,a.jsxs)(n.p,{children:["You need instances for ",(0,a.jsx)(n.code,{children:"Log"})," when you actually run your program.\nIt's usually only one place where you put the ",(0,a.jsx)(n.code,{children:"main"})," method."]}),"\n",(0,a.jsxs)(n.h3,{id:"logf-instance",children:[(0,a.jsx)(n.code,{children:"Log[F]"})," Instance"]}),"\n",(0,a.jsxs)(n.p,{children:["For the instance of ",(0,a.jsx)(n.code,{children:"Log[F]"}),","]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import loggerf.instances.cats._\n"})}),"\n",(0,a.jsx)(n.h3,{id:"instances-for-effectie",children:"Instances for Effectie"}),"\n",(0,a.jsxs)(n.p,{children:["For the instance of ",(0,a.jsx)(n.code,{children:"Fx[F]"})," (effectie)"]}),"\n",(0,a.jsxs)(l.Z,{groupId:"effectie",defaultValue:"monix3",values:[{label:"Monix 3",value:"monix3"},{label:"Cats Effect 2",value:"ce2"},{label:"Cats Effect 3",value:"ce3"}],children:[(0,a.jsx)(r.Z,{value:"monix3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import effectie.instnace.monix3.fx._\n"})})}),(0,a.jsx)(r.Z,{value:"ce2",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import effectie.instnace.ce2.fx._\n"})})}),(0,a.jsx)(r.Z,{value:"ce3",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import effectie.instnace.ce3.fx._\n"})})})]}),"\n",(0,a.jsxs)(n.h3,{id:"canlog-logger",children:[(0,a.jsx)(n.code,{children:"CanLog"})," (",(0,a.jsx)(n.code,{children:"Logger"}),")"]}),"\n",(0,a.jsxs)(l.Z,{groupId:"loggers",defaultValue:"slf4j",values:[{label:"Slf4J",value:"slf4j"},{label:"Log4s",value:"log4s"},{label:"Log4j",value:"log4j"}],children:[(0,a.jsxs)(r.Z,{value:"slf4j",children:[(0,a.jsxs)(n.p,{children:["If you use slf4j or logback, get ",(0,a.jsx)(n.code,{children:"logger-f-slf4j"})," then,"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import loggerf.logger._\n\nimplicit val canLog: CanLog = Slf4JLogger.slf4JCanLog[MyAppType]\n// or\nimplicit val canLog: CanLog = Slf4JLogger.slf4JCanLog[this.type]\n\n// or\nimplicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("my-logger-name")\n\n// or\nimplicit val canLog: CanLog = Slf4JLogger.slf4JCanLogWith(org.slf4j.LoggerFactory.getLogger(getClass))\n'})})]}),(0,a.jsxs)(r.Z,{value:"log4s",children:[(0,a.jsxs)(n.p,{children:["If you use log4s, get ",(0,a.jsx)(n.code,{children:"logger-f-log4s"})," then,"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import loggerf.logger._\nimplicit val canLog: CanLog = Log4sLogger.log4sCanLog[MyAppType]\n// or\nimplicit val canLog: CanLog = Log4sLogger.log4sCanLog[this.type]\n\n// or\nimplicit val canLog: CanLog = Log4sLogger.log4sCanLog("my-logger-name")\n\n// or\nimplicit val canLog: CanLog = Log4sLogger.log4sCanLogWith(org.log4s.getLogger)\n'})})]}),(0,a.jsxs)(r.Z,{value:"log4j",children:[(0,a.jsxs)(n.p,{children:["If you use log4j, get ",(0,a.jsx)(n.code,{children:"logger-f-log4j"})," then,"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'\nimport loggerf.logger._\nimplicit val canLog: CanLog = Log4jLogger.log4jCanLog[MyAppType]\n// or\nimplicit val canLog: CanLog = Log4jLogger.log4jCanLog[this.type]\n\n// or\nimplicit val canLog: CanLog = Log4jLogger.log4jCanLog("my-logger-name")\n\n// or\nimplicit val canLog: CanLog = Log4jLogger.log4jCanLogWith(org.apache.logging.log4j.LogManager.getLogger(getClass)) \n'})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import cats._\nimport cats.syntax.all._\n\nimport effectie.core._\nimport effectie.syntax.all._\n\nimport loggerf.core._\nimport loggerf.syntax.all._\n\ntrait Foo[F[_]] {\n  def foo(name: String): F[Unit]\n}\nobject Foo {\n  def apply[F[_]: Fx: Log: Monad]: Foo[F] = new FooF[F]\n  \n  private class FooF[F[_]: Fx: Log: Monad] extends Foo[F] {\n    def foo(name: String): F[Unit] =\n      for {\n        _ <- s"Name: $name".logS_(info)\n        message <- pureOf(s"Hello $name").log(infoA)\n        _ <- effectOf(println(message))\n      } yield ()\n  }\n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import cats.effect._\n\nobject MyApp extends IOApp.Simple {\n  import loggerf.logger._ \n  implicit val canLog: CanLog = Slf4JLogger.slf4JCanLog[this.type]\n\n  import effectie.instances.ce2.fx._\n  import loggerf.instances.cats._\n  \n  def run: IO[Unit] =\n    Foo[IO].foo("Kevin")\n    \n}\n'})})]})}function f(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},5162:(e,n,o)=>{o.d(n,{Z:()=>r});o(7294);var a=o(512);const t={tabItem:"tabItem_Ymn6"};var l=o(5893);function r(e){let{children:n,hidden:o,className:r}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,a.Z)(t.tabItem,r),hidden:o,children:n})}},4866:(e,n,o)=>{o.d(n,{Z:()=>y});var a=o(7294),t=o(512),l=o(2466),r=o(6550),s=o(469),i=o(1980),c=o(7392),g=o(12);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:o}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:o,attributes:a,default:t}}=e;return{value:n,label:o,attributes:a,default:t}}))}(o);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,o])}function f(e){let{value:n,tabValues:o}=e;return o.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:o}=e;const t=(0,r.k6)(),l=function(e){let{queryString:n=!1,groupId:o}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return o??null}({queryString:n,groupId:o});return[(0,i._X)(l),(0,a.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(t.location.search);n.set(l,e),t.replace({...t.location,search:n.toString()})}),[l,t])]}function h(e){const{defaultValue:n,queryString:o=!1,groupId:t}=e,l=d(e),[r,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:o}=e;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:o}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${o.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=o.find((e=>e.default))??o[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[c,u]=p({queryString:o,groupId:t}),[h,m]=function(e){let{groupId:n}=e;const o=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,l]=(0,g.Nk)(o);return[t,(0,a.useCallback)((e=>{o&&l.set(e)}),[o,l])]}({groupId:t}),x=(()=>{const e=c??h;return f({value:e,tabValues:l})?e:null})();(0,s.Z)((()=>{x&&i(x)}),[x]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),m(e)}),[u,m,l]),tabValues:l}}var m=o(2389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=o(5893);function v(e){let{className:n,block:o,selectedValue:a,selectValue:r,tabValues:s}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),g=e=>{const n=e.currentTarget,o=i.indexOf(n),t=s[o].value;t!==a&&(c(n),r(t))},u=e=>{let n=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const o=i.indexOf(e.currentTarget)+1;n=i[o]??i[0];break}case"ArrowLeft":{const o=i.indexOf(e.currentTarget)-1;n=i[o]??i[i.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":o},n),children:s.map((e=>{let{value:n,label:o,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>i.push(e),onKeyDown:u,onClick:g,...l,className:(0,t.Z)("tabs__item",x.tabItem,l?.className,{"tabs__item--active":a===n}),children:o??n},n)}))})}function L(e){let{lazy:n,children:o,selectedValue:t}=e;const l=(Array.isArray(o)?o:[o]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function b(e){const n=h(e);return(0,j.jsxs)("div",{className:(0,t.Z)("tabs-container",x.tabList),children:[(0,j.jsx)(v,{...e,...n}),(0,j.jsx)(L,{...e,...n})]})}function y(e){const n=(0,m.Z)();return(0,j.jsx)(b,{...e,children:u(e.children)},String(n))}},1151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>r});var a=o(7294);const t={},l=a.createContext(t);function r(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);