"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[938],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=p(t),m=a,d=g["".concat(c,".").concat(m)]||g[m]||f[m]||o;return t?r.createElement(d,i(i({ref:n},s),{},{components:t})):r.createElement(d,i({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},5682:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return f}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={id:"log",title:"Log - Scalaz"},c=void 0,p={unversionedId:"docs/scalaz-effect/log",id:"version-v1/docs/scalaz-effect/log",title:"Log - Scalaz",description:"Log - Scalaz (WIP)",source:"@site/versioned_docs/version-v1/docs/scalaz-effect/log.md",sourceDirName:"docs/scalaz-effect",slug:"/docs/scalaz-effect/log",permalink:"/docs/v1/docs/scalaz-effect/log",tags:[],version:"v1",frontMatter:{id:"log",title:"Log - Scalaz"},sidebar:"version-v1/docs",previous:{title:"Get LoggerF",permalink:"/docs/v1/docs/scalaz-effect/getting-started"}},s={},f=[{value:"Log - Scalaz (WIP)",id:"log---scalaz-wip",level:2},{value:"Log <code>F[A]</code>",id:"log-fa",level:2},{value:"Example",id:"example",level:3},{value:"Log <code>F[Option[A]]</code>",id:"log-foptiona",level:2},{value:"Log <code>OptionT[F, A]</code>",id:"log-optiontf-a",level:2},{value:"Log <code>F[A / B]</code>",id:"log-fa--b",level:2},{value:"Log <code>EitherT[F, A, B]</code>",id:"log-eithertf-a-b",level:2}],g={toc:f};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"log---scalaz-wip"},"Log - Scalaz (WIP)"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Log")," is a typeclass to log ",(0,o.kt)("inlineCode",{parentName:"p"},"F[A]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"F[Option[A]]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"F[A \\/ B]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT[F, A]")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"EitherT[F, A, B]"),"."),(0,o.kt)("p",null,"It requires ",(0,o.kt)("inlineCode",{parentName:"p"},"Fx")," from ",(0,o.kt)("a",{parentName:"p",href:"https://kevin-lee.github.io/effectie"},"Effectie")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Monad")," from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/scalaz/scalaz"},"Scalaz"),"."),(0,o.kt)("h2",{id:"log-fa"},"Log ",(0,o.kt)("inlineCode",{parentName:"h2"},"F[A]")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"Log[F].log(F[A])(A => String)\n")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'trait Named[A] {\n  def name(a: A): String\n}\n\nobject Named {\n  def apply[A: Named]: Named[A] = implicitly[Named[A]]\n}\n\nfinal case class GivenName(givenName: String) extends AnyVal\nfinal case class Surname(surname: String) extends AnyVal\n\nfinal case class Person(givenName: GivenName, surname: Surname)\nobject Person {\n  implicit val namedPerson: Named[Person] =\n    person => s"${person.givenName.givenName} ${person.surname.surname}"\n}\n\nimport scalaz._\nimport Scalaz._\nimport scalaz.effect._\n\nimport effectie.scalaz.Fx\nimport effectie.scalaz.ConsoleEffect\nimport effectie.scalaz.Effectful._\n\nimport loggerf.logger._\nimport loggerf.scalaz._\nimport loggerf.syntax._\n\ntrait Greeting[F[_]] {\n  def greet[A: Named](a: A): F[String]\n}\n\nobject Greeting {\n  def apply[F[_] : Greeting]: Greeting[F] = implicitly[Greeting[F]]\n\n  implicit def hello[F[_]: Fx: Monad: Log]: Greeting[F] =\n    new Greeting[F] {\n      def greet[A: Named](a: A): F[String] = for {\n        name <- log(effectOf(Named[A].name(a)))(x => info(s"The name is $x"))\n        greeting <- pureOf(s"Hello $name")\n      } yield greeting\n    }\n\n}\n\nobject MyApp {\n\n  implicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("MyApp")\n\n  def run(args: List[String]): IO[Unit] = for {\n    greetingMessage <- Greeting[IO].greet(Person(GivenName("Kevin"), Surname("Lee")))\n    _ <- ConsoleEffect[IO].putStrLn(greetingMessage)\n  } yield ()\n\n  def main(args: Array[String]): Unit =\n    run(args.toList).unsafePerformIO()\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"21:02:15.323 [ioapp-compute-0] INFO MyApp - The name is Kevin Lee\nHello Kevin Lee\n")),(0,o.kt)("h2",{id:"log-foptiona"},"Log ",(0,o.kt)("inlineCode",{parentName:"h2"},"F[Option[A]]")),(0,o.kt)("h2",{id:"log-optiontf-a"},"Log ",(0,o.kt)("inlineCode",{parentName:"h2"},"OptionT[F, A]")),(0,o.kt)("h2",{id:"log-fa--b"},"Log ",(0,o.kt)("inlineCode",{parentName:"h2"},"F[A \\/ B]")),(0,o.kt)("h2",{id:"log-eithertf-a-b"},"Log ",(0,o.kt)("inlineCode",{parentName:"h2"},"EitherT[F, A, B]")))}m.isMDXComponent=!0}}]);