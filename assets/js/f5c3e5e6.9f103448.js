"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[241],{3905:function(e,n,t){t.d(n,{Zo:function(){return g},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},g=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),s=c(t),d=o,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},g),{},{components:t})):r.createElement(f,a({ref:n},g))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=s;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},6497:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return g},default:function(){return s}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={id:"log",title:"Log - Monix"},p=void 0,c={unversionedId:"monix/log",id:"monix/log",title:"Log - Monix",description:"Log - Monix (WIP)",source:"@site/../generated-docs/target/mdoc/monix/log.md",sourceDirName:"monix",slug:"/monix/log",permalink:"/docs/monix/log",tags:[],version:"current",frontMatter:{id:"log",title:"Log - Monix"},sidebar:"theSidebar",previous:{title:"Get LoggerF",permalink:"/docs/monix/getting-started"},next:{title:"Get LoggerF",permalink:"/docs/scalaz-effect/getting-started"}},g=[{value:"Log - Monix (WIP)",id:"log---monix-wip",children:[],level:2},{value:"Log <code>F[A]</code>",id:"log-fa",children:[{value:"Example",id:"example",children:[],level:3}],level:2},{value:"Log <code>F[Option[A]]</code>",id:"log-foptiona",children:[],level:2},{value:"Log <code>OptionT[F, A]</code>",id:"log-optiontf-a",children:[],level:2},{value:"Log <code>F[Either[A, B]]</code>",id:"log-feithera-b",children:[],level:2},{value:"Log <code>EitherT[F, A, B]</code>",id:"log-eithertf-a-b",children:[],level:2}],m={toc:g};function s(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"log---monix-wip"},"Log - Monix (WIP)"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Log")," is a typeclass to log ",(0,i.kt)("inlineCode",{parentName:"p"},"F[A]"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"F[Option[A]]"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"F[Either[A, B]]"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"OptionT[F, A]")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"EitherT[F, A, B]"),"."),(0,i.kt)("p",null,"It requires ",(0,i.kt)("inlineCode",{parentName:"p"},"Fx")," from ",(0,i.kt)("a",{parentName:"p",href:"https://kevin-lee.github.io/effectie"},"Effectie")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Monad")," from ",(0,i.kt)("a",{parentName:"p",href:"https://typelevel.org/cats"},"Cats"),"."),(0,i.kt)("h2",{id:"log-fa"},"Log ",(0,i.kt)("inlineCode",{parentName:"h2"},"F[A]")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"Log[F].log(F[A])(A => String)\n")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'trait Named[A] {\n  def name(a: A): String\n}\n\nobject Named {\n  def apply[A: Named]: Named[A] = implicitly[Named[A]]\n}\n\nfinal case class GivenName(givenName: String) extends AnyVal\nfinal case class Surname(surname: String) extends AnyVal\n\nfinal case class Person(givenName: GivenName, surname: Surname)\nobject Person {\n  implicit val namedPerson: Named[Person] =\n    person => s"${person.givenName.givenName} ${person.surname.surname}"\n}\n\nimport cats._\nimport cats.syntax.all._\nimport cats.effect.ExitCode\n\nimport effectie.monix.{ConsoleEffect, Fx}\nimport effectie.monix.Effectful._\n\nimport loggerf.logger._\nimport loggerf.monix._\nimport loggerf.syntax._\n\nimport monix.eval.Task\nimport monix.eval.TaskApp\n\n\ntrait Greeting[F[_]] {\n  def greet[A: Named](a: A): F[String]\n}\n\nobject Greeting {\n  def apply[F[_]: Greeting]: Greeting[F] = implicitly[Greeting[F]]\n\n  implicit def hello[F[_]: Fx: Monad: Log]: Greeting[F] =\n    new Greeting[F] {\n      def greet[A: Named](a: A): F[String] =\n        for {\n          name <- log(effectOf(Named[A].name(a)))(x => info(s"The name is $x"))\n          greeting <- pureOf(s"Hello $name")\n        } yield greeting\n    }\n\n}\n\nobject TaskMainApp extends TaskApp {\n\n  implicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("MyApp")\n\n  def run(args: List[String]): Task[ExitCode] =\n    for {\n      greetingMessage <- Greeting[Task].greet(\n        Person(GivenName("Kevin"), Surname("Lee"))\n      )\n      _ <- ConsoleEffect[Task].putStrLn(greetingMessage)\n    } yield ExitCode.Success\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"19:57:04.076 [scala-execution-context-global-21] INFO MyApp - The name is Kevin Lee\nHello Kevin Lee\n")),(0,i.kt)("h2",{id:"log-foptiona"},"Log ",(0,i.kt)("inlineCode",{parentName:"h2"},"F[Option[A]]")),(0,i.kt)("h2",{id:"log-optiontf-a"},"Log ",(0,i.kt)("inlineCode",{parentName:"h2"},"OptionT[F, A]")),(0,i.kt)("h2",{id:"log-feithera-b"},"Log ",(0,i.kt)("inlineCode",{parentName:"h2"},"F[Either[A, B]]")),(0,i.kt)("h2",{id:"log-eithertf-a-b"},"Log ",(0,i.kt)("inlineCode",{parentName:"h2"},"EitherT[F, A, B]")))}s.isMDXComponent=!0}}]);