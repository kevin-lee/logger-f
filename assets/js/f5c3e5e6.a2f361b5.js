"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[241],{6497:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return g},default:function(){return d}});var i=t(7462),o=t(3366),a=(t(7294),t(3905)),r=["components"],l={id:"log",title:"Log - Monix"},p=void 0,m={unversionedId:"monix/log",id:"monix/log",isDocsHomePage:!1,title:"Log - Monix",description:"Log - Monix (WIP)",source:"@site/../generated-docs/target/mdoc/monix/log.md",sourceDirName:"monix",slug:"/monix/log",permalink:"/docs/monix/log",tags:[],version:"current",frontMatter:{id:"log",title:"Log - Monix"},sidebar:"someSidebar",previous:{title:"For Monix",permalink:"/docs/monix/monix"},next:{title:"For Scalaz Effect",permalink:"/docs/scalaz-effect/scalaz-effect"}},g=[{value:"Log - Monix (WIP)",id:"log---monix-wip",children:[],level:2},{value:"Log <code>F[A]</code>",id:"log-fa",children:[{value:"Example",id:"example",children:[],level:3}],level:2},{value:"Log <code>F[Option[A]]</code>",id:"log-foptiona",children:[],level:2},{value:"Log <code>OptionT[F, A]</code>",id:"log-optiontf-a",children:[],level:2},{value:"Log <code>F[Either[A, B]]</code>",id:"log-feithera-b",children:[],level:2},{value:"Log <code>EitherT[F, A, B]</code>",id:"log-eithertf-a-b",children:[],level:2}],s={toc:g};function d(e){var n=e.components,t=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"log---monix-wip"},"Log - Monix (WIP)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Log")," is a typeclass to log ",(0,a.kt)("inlineCode",{parentName:"p"},"F[A]"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"F[Option[A]]"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"F[Either[A, B]]"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"OptionT[F, A]")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"EitherT[F, A, B]"),"."),(0,a.kt)("p",null,"It requires ",(0,a.kt)("inlineCode",{parentName:"p"},"Fx")," from ",(0,a.kt)("a",{parentName:"p",href:"https://kevin-lee.github.io/effectie"},"Effectie")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Monad")," from ",(0,a.kt)("a",{parentName:"p",href:"https://typelevel.org/cats"},"Cats"),"."),(0,a.kt)("h2",{id:"log-fa"},"Log ",(0,a.kt)("inlineCode",{parentName:"h2"},"F[A]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"Log[F].log(F[A])(A => String)\n")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'trait Named[A] {\n  def name(a: A): String\n}\n\nobject Named {\n  def apply[A: Named]: Named[A] = implicitly[Named[A]]\n}\n\nfinal case class GivenName(givenName: String) extends AnyVal\nfinal case class Surname(surname: String) extends AnyVal\n\nfinal case class Person(givenName: GivenName, surname: Surname)\nobject Person {\n  implicit val namedPerson: Named[Person] =\n    person => s"${person.givenName.givenName} ${person.surname.surname}"\n}\n\nimport cats._\nimport cats.syntax.all._\nimport cats.effect.ExitCode\n\nimport effectie.monix.{ConsoleEffect, Fx}\nimport effectie.monix.Effectful._\n\nimport loggerf.logger._\nimport loggerf.monix._\nimport loggerf.syntax._\n\nimport monix.eval.Task\nimport monix.eval.TaskApp\n\n\ntrait Greeting[F[_]] {\n  def greet[A: Named](a: A): F[String]\n}\n\nobject Greeting {\n  def apply[F[_]: Greeting]: Greeting[F] = implicitly[Greeting[F]]\n\n  implicit def hello[F[_]: Fx: Monad: Log]: Greeting[F] =\n    new Greeting[F] {\n      def greet[A: Named](a: A): F[String] =\n        for {\n          name <- log(effectOf(Named[A].name(a)))(x => info(s"The name is $x"))\n          greeting <- pureOf(s"Hello $name")\n        } yield greeting\n    }\n\n}\n\nobject TaskMainApp extends TaskApp {\n\n  implicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("MyApp")\n\n  def run(args: List[String]): Task[ExitCode] =\n    for {\n      greetingMessage <- Greeting[Task].greet(\n        Person(GivenName("Kevin"), Surname("Lee"))\n      )\n      _ <- ConsoleEffect[Task].putStrLn(greetingMessage)\n    } yield ExitCode.Success\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"19:57:04.076 [scala-execution-context-global-21] INFO MyApp - The name is Kevin Lee\nHello Kevin Lee\n")),(0,a.kt)("h2",{id:"log-foptiona"},"Log ",(0,a.kt)("inlineCode",{parentName:"h2"},"F[Option[A]]")),(0,a.kt)("h2",{id:"log-optiontf-a"},"Log ",(0,a.kt)("inlineCode",{parentName:"h2"},"OptionT[F, A]")),(0,a.kt)("h2",{id:"log-feithera-b"},"Log ",(0,a.kt)("inlineCode",{parentName:"h2"},"F[Either[A, B]]")),(0,a.kt)("h2",{id:"log-eithertf-a-b"},"Log ",(0,a.kt)("inlineCode",{parentName:"h2"},"EitherT[F, A, B]")))}d.isMDXComponent=!0}}]);