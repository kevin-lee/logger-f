"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[478],{1531:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>g,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=l(5893),r=l(1151),s=l(4866),o=l(5162);const a={sidebar_position:1,id:"getting-started",title:"Getting Started",slug:"/"},i=void 0,c={id:"getting-started",title:"Getting Started",description:"Build Status",source:"@site/../generated-docs/docs/getting-started.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"getting-started",title:"Getting Started",slug:"/"},sidebar:"theSidebar",next:{title:"Get LoggerF",permalink:"/docs/cats/"}},g={},d=[{value:"LoggerF - Logger for <code>F[_]</code>",id:"loggerf---logger-for-f_",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Get LoggerF For Cats Effect",id:"get-loggerf-for-cats-effect",level:3},{value:"Get LoggerF For Cats",id:"get-loggerf-for-cats",level:3},{value:"With SLF4J",id:"with-slf4j",level:4},{value:"With Log4j",id:"with-log4j",level:4},{value:"With Log4s",id:"with-log4s",level:4},{value:"With sbt Logging Util",id:"with-sbt-logging-util",level:4},{value:"Why",id:"why",level:2},{value:"Log without LoggerF",id:"log-without-loggerf",level:3},{value:"Log with LoggerF",id:"log-with-loggerf",level:3},{value:"Log without LoggerF (Option and OptionT)",id:"log-without-loggerf-option-and-optiont",level:3},{value:"Log with LoggerF (Option and OptionT)",id:"log-with-loggerf-option-and-optiont",level:3},{value:"Log with LoggerF (EitherT)",id:"log-with-loggerf-eithert",level:3},{value:"Usage",id:"usage",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:l(9329).Z+"",width:"200",height:"200"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/Kevin-Lee/logger-f/actions?workflow=Build-All",children:(0,t.jsx)(n.img,{src:"https://github.com/Kevin-Lee/logger-f/workflows/Build-All/badge.svg",alt:"Build Status"})}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/Kevin-Lee/logger-f/actions?workflow=Release",children:(0,t.jsx)(n.img,{src:"https://github.com/Kevin-Lee/logger-f/workflows/Release/badge.svg",alt:"Release Status"})}),"\n",(0,t.jsx)(n.a,{href:"https://index.scala-lang.org/kevin-lee/logger-f",children:(0,t.jsx)(n.img,{src:"https://index.scala-lang.org/kevin-lee/logger-f/latest.svg",alt:"Latest version"})})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"right"},children:"Project"}),(0,t.jsx)(n.th,{children:"Maven Central"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"right"},children:"logger-f-cats"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://search.maven.org/artifact/io.kevinlee/logger-f-cats_2.13",children:(0,t.jsx)(n.img,{src:"https://maven-badges.herokuapp.com/maven-central/io.kevinlee/logger-f-cats_2.13/badge.svg",alt:"Maven Central"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"right"},children:"logger-f-slf4j"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://search.maven.org/artifact/io.kevinlee/logger-f-slf4j_2.13",children:(0,t.jsx)(n.img,{src:"https://maven-badges.herokuapp.com/maven-central/io.kevinlee/logger-f-slf4j_2.13/badge.svg",alt:"Maven Central"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"right"},children:"logger-f-log4j"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://search.maven.org/artifact/io.kevinlee/logger-f-log4j_2.13",children:(0,t.jsx)(n.img,{src:"https://maven-badges.herokuapp.com/maven-central/io.kevinlee/logger-f-log4j_2.13/badge.svg",alt:"Maven Central"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"right"},children:"logger-f-log4s"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://search.maven.org/artifact/io.kevinlee/logger-f-log4s_2.13",children:(0,t.jsx)(n.img,{src:"https://maven-badges.herokuapp.com/maven-central/io.kevinlee/logger-f-log4s_2.13/badge.svg",alt:"Maven Central"})})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"right"},children:"logger-f-sbt-logging"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://search.maven.org/artifact/io.kevinlee/logger-f-sbt-logging_2.13",children:(0,t.jsx)(n.img,{src:"https://maven-badges.herokuapp.com/maven-central/io.kevinlee/logger-f-sbt-logging_2.13/badge.svg",alt:"Maven Central"})})})]})]})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Supported Scala Versions: ",(0,t.jsx)(n.code,{children:"3"}),", ",(0,t.jsx)(n.code,{children:"2.13"})," and ",(0,t.jsx)(n.code,{children:"2.12"})]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"loggerf---logger-for-f_",children:["LoggerF - Logger for ",(0,t.jsx)(n.code,{children:"F[_]"})]}),"\n",(0,t.jsxs)(n.p,{children:["LoggerF is a tool for logging tagless final with an effect library. LoggerF requires ",(0,t.jsx)(n.a,{href:"https://kevin-lee.github.io/effectie",children:"Effectie"})," to construct ",(0,t.jsx)(n.code,{children:"F[_]"}),". All the example code in this doc site uses Effectie so if you're not familiar with it, please check out ",(0,t.jsx)(n.a,{href:"https://kevin-lee.github.io/effectie",children:"Effectie"})," website."]}),"\n",(0,t.jsxs)(n.p,{children:["Why LoggerF? Why not just log with ",(0,t.jsx)(n.code,{children:"map"})," or ",(0,t.jsx)(n.code,{children:"flatMap"}),"? Please read ",(0,t.jsx)(n.a,{href:"#why",children:'"Why?"'})," section."]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"get-loggerf-for-cats-effect",children:"Get LoggerF For Cats Effect"}),"\n",(0,t.jsx)(n.h3,{id:"get-loggerf-for-cats",children:"Get LoggerF For Cats"}),"\n",(0,t.jsxs)(n.p,{children:["logger-f can be used wit any effect library or ",(0,t.jsx)(n.code,{children:"Future"})," as long as there is an instance of ",(0,t.jsx)(n.code,{children:"Fx"})," from effectie. Effectie provides instances of ",(0,t.jsx)(n.code,{children:"Fx"})," for Cats Effect 2 and 3, and Monix 3."]}),"\n",(0,t.jsx)(n.h4,{id:"with-slf4j",children:"With SLF4J"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"If you use logback, please use this."})}),"\n",(0,t.jsxs)(s.Z,{groupId:"slf4j",defaultValue:"slf4j-sbt",values:[{label:"sbt",value:"slf4j-sbt"},{label:"sbt (with libraryDependencies)",value:"slf4j-sbt-lib"},{label:"scala-cli",value:"slf4j-scala-cli"}],children:[(0,t.jsxs)(o.Z,{value:"slf4j-sbt",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n"io.kevinlee" %% "logger-f-slf4j" % "2.0.0-beta24",\n'})})]}),(0,t.jsxs)(o.Z,{value:"slf4j-sbt-lib",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'libraryDependencies ++= Seq(\n    "io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n    "io.kevinlee" %% "logger-f-slf4j" % "2.0.0-beta24",\n  )\n'})})]}),(0,t.jsx)(o.Z,{value:"slf4j-scala-cli",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'//> using dep "io.kevinlee::logger-f-cats:2.0.0-beta24"\n//> using dep "io.kevinlee::logger-f-slf4j:2.0.0-beta24"\n'})})})]}),"\n",(0,t.jsx)(n.h4,{id:"with-log4j",children:"With Log4j"}),"\n",(0,t.jsxs)(s.Z,{groupId:"log4j",defaultValue:"log4j-sbt",values:[{label:"sbt",value:"log4j-sbt"},{label:"sbt (with libraryDependencies)",value:"log4j-sbt-lib"},{label:"scala-cli",value:"log4j-scala-cli"}],children:[(0,t.jsxs)(o.Z,{value:"log4j-sbt",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n"io.kevinlee" %% "logger-f-log4j" % "2.0.0-beta24",\n'})})]}),(0,t.jsxs)(o.Z,{value:"log4j-sbt-lib",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'libraryDependencies ++= Seq(\n    "io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n    "io.kevinlee" %% "logger-f-log4j" % "2.0.0-beta24",\n  )\n'})})]}),(0,t.jsx)(o.Z,{value:"log4j-scala-cli",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'//> using dep "io.kevinlee::logger-f-cats:2.0.0-beta24"\n//> using dep "io.kevinlee::logger-f-log4j:2.0.0-beta24"\n'})})})]}),"\n",(0,t.jsx)(n.h4,{id:"with-log4s",children:"With Log4s"}),"\n",(0,t.jsxs)(s.Z,{groupId:"log4s",defaultValue:"log4s-sbt",values:[{label:"sbt",value:"log4s-sbt"},{label:"sbt (with libraryDependencies)",value:"log4s-sbt-lib"},{label:"scala-cli",value:"log4s-scala-cli"}],children:[(0,t.jsxs)(o.Z,{value:"log4s-sbt",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n"io.kevinlee" %% "logger-f-log4s" % "2.0.0-beta24",\n'})})]}),(0,t.jsxs)(o.Z,{value:"log4s-sbt-lib",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'libraryDependencies ++= Seq(\n    "io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n    "io.kevinlee" %% "logger-f-log4s" % "2.0.0-beta24",\n  )\n'})})]}),(0,t.jsx)(o.Z,{value:"log4s-scala-cli",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'//> using dep "io.kevinlee::logger-f-cats:2.0.0-beta24"\n//> using dep "io.kevinlee::logger-f-log4s:2.0.0-beta24"\n'})})})]}),"\n",(0,t.jsx)(n.h4,{id:"with-sbt-logging-util",children:"With sbt Logging Util"}),"\n",(0,t.jsx)(n.p,{children:"For sbt plugin development,"}),"\n",(0,t.jsxs)(s.Z,{groupId:"sbt-logging",defaultValue:"sbt-logging-sbt",values:[{label:"sbt",value:"sbt-logging-sbt"},{label:"sbt (with libraryDependencies)",value:"sbt-logging-sbt-lib"},{label:"scala-cli",value:"sbt-logging-scala-cli"}],children:[(0,t.jsxs)(o.Z,{value:"sbt-logging-sbt",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n"io.kevinlee" %% "logger-f-sbt-logging" % "2.0.0-beta24",\n'})})]}),(0,t.jsxs)(o.Z,{value:"sbt-logging-sbt-lib",children:[(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"build.sbt"}),","]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'libraryDependencies ++= Seq(\n    "io.kevinlee" %% "logger-f-cats" % "2.0.0-beta24",\n    "io.kevinlee" %% "logger-f-sbt-logging" % "2.0.0-beta24",\n  )\n'})})]}),(0,t.jsx)(o.Z,{value:"sbt-logging-scala-cli",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'//> using dep "io.kevinlee::logger-f-cats:2.0.0-beta24"\n//> using dep "io.kevinlee::logger-f-sbt-logging:2.0.0-beta24"\n'})})})]}),"\n",(0,t.jsx)(n.h2,{id:"why",children:"Why"}),"\n",(0,t.jsx)(n.h3,{id:"log-without-loggerf",children:"Log without LoggerF"}),"\n",(0,t.jsxs)(n.p,{children:["If you code tagless final and use some effect library like ",(0,t.jsx)(n.a,{href:"https://typelevel.org/cats-effect",children:"Cats Effect"})," and ",(0,t.jsx)(n.a,{href:"https://monix.io",children:"Monix"})," or use ",(0,t.jsx)(n.code,{children:"Future"}),", you may have inconvenience in logging."]}),"\n",(0,t.jsxs)(n.p,{children:["What inconvenience? I can just log with ",(0,t.jsx)(n.code,{children:"flatMap"})," like."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'for {\n  a <- foo(n) // F[A]\n  _ <- Sync[F].delay(logger.debug(s"a is $a")) // F[Unit]\n  b <- bar(a) // F[B]\n  _ <- Sync[F].delay(logger.debug(s"b is $b")) // F[Unit]\n} yield b\n'})}),"\n",(0,t.jsx)(n.p,{children:"That's true, but it's distracting to have log in each flatMap.\nSo,"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"1 line for the actual code\n1 line for logging\n1 line for the actual code\n1 line for logging\n"})}),"\n",(0,t.jsx)(n.h3,{id:"log-with-loggerf",children:"Log with LoggerF"}),"\n",(0,t.jsx)(n.p,{children:"It can be simplified by logger-f."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'for {\n  a <- foo(n).log(a => debug(s"a is $a")) // F[A]\n  b <- bar(a).log(b => debug(s"b is $b")) // F[B]\n} yield b\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"log-without-loggerf-option-and-optiont",children:"Log without LoggerF (Option and OptionT)"}),"\n",(0,t.jsxs)(n.p,{children:["What about ",(0,t.jsx)(n.code,{children:"F[_]"})," with ",(0,t.jsx)(n.code,{children:"Option"})," and ",(0,t.jsx)(n.code,{children:"Either"}),"? What happens if you want to use ",(0,t.jsx)(n.code,{children:"Option"})," or ",(0,t.jsx)(n.code,{children:"Either"}),"?\nIf you use ",(0,t.jsx)(n.code,{children:"F[_]"})," with ",(0,t.jsx)(n.code,{children:"Option"})," or ",(0,t.jsx)(n.code,{children:"Either"}),", you may have more inconvenience or may not get the result you want."]}),"\n",(0,t.jsx)(n.p,{children:"e.g.)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport org.slf4j.LoggerFactory\nval logger = LoggerFactory.getLogger("test-logger")\n// logger: org.slf4j.Logger = Logger[test-logger]\n\ndef foo[F[_]: Sync](n: Int): F[Option[Int]] = for {\n  a <- Sync[F].pure(n.some)\n  _ <- Sync[F].delay(\n         a match {\n           case Some(value) =>\n             logger.debug(s"a is $value")\n           case None =>\n             logger.debug("No \'a\' value found")\n         }\n       ) // F[Unit]\n  b <- Sync[F].pure(none[Int])\n  _ <- Sync[F].delay(\n         b match {\n           case Some(value) =>\n             logger.debug(s"b is $value")\n           case None =>\n             () // don\'t log anything for None case\n         }\n       ) // F[Unit]\n  c <- Sync[F].pure(123.some)\n  _ <- Sync[F].delay(\n         c match {\n           case Some(value) =>\n             () // don\'t log anything for None case\n           case None =>\n             logger.debug("No \'c\' value found")\n         }\n       ) // F[Unit]\n} yield c\n'})}),"\n",(0,t.jsx)(n.p,{children:"So much noise for logging!"}),"\n",(0,t.jsx)(n.p,{children:"Now, let's think about the result."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"foo[IO](1).unsafeRunSync() // You probably want to have None here.\n// res1: Option[Int] = Some(value = 123)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You expect ",(0,t.jsx)(n.code,{children:"None"})," for the result due to ",(0,t.jsx)(n.code,{children:"Sync[F].pure(none[Int])"})," yet you get ",(0,t.jsx)(n.code,{children:"Some(123)"})," instead. That's because ",(0,t.jsx)(n.code,{children:"b"})," is from ",(0,t.jsx)(n.code,{children:"F[Option[Int]]"})," not from ",(0,t.jsx)(n.code,{children:"Option[Int]"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The same issue exists for ",(0,t.jsx)(n.code,{children:"F[Either[A, B]]"})," as well."]}),"\n",(0,t.jsxs)(n.p,{children:["So you need to use ",(0,t.jsx)(n.code,{children:"OptionT"})," for ",(0,t.jsx)(n.code,{children:"F[Option[A]]"})," and ",(0,t.jsx)(n.code,{children:"EitherT"})," for ",(0,t.jsx)(n.code,{children:"F[Either[A, B]]"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Let's write it again with ",(0,t.jsx)(n.code,{children:"OptionT"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import cats.data._\nimport cats.syntax.all._\nimport cats.effect._\n\nimport org.slf4j.LoggerFactory\nval logger = LoggerFactory.getLogger("test-logger")\n// logger: org.slf4j.Logger = Logger[test-logger]\n\ndef foo[F[_]: Sync](n: Int): F[Option[Int]] = (for {\n  a <- OptionT(Sync[F].pure(n.some))\n  _ <- OptionT.liftF(Sync[F].delay(logger.debug(s"a is $a"))) // Now, you can\'t log None case.\n  b <- OptionT(Sync[F].pure(none[Int]))\n  _ <- OptionT.liftF(Sync[F].delay(logger.debug(s"b is $b"))) // You can\'t log None case.\n  c <- OptionT(Sync[F].pure(123.some))\n  _ <- OptionT.liftF(Sync[F].delay(logger.debug(s"c is $c"))) // You can\'t log None case.\n} yield c).value\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"foo[IO](1).unsafeRunSync() // You expect None here.\n// res3: Option[Int] = None\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The problem's gone! Now each ",(0,t.jsx)(n.code,{children:"flatMap"})," handles only ",(0,t.jsx)(n.code,{children:"Some"})," case and that's what you want. However, because of that, it's hard to log ",(0,t.jsx)(n.code,{children:"None"})," case."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"log-with-loggerf-option-and-optiont",children:"Log with LoggerF (Option and OptionT)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"LoggerF can solve this issue for you!"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import cats._\nimport cats.data._\nimport cats.syntax.all._\nimport cats.effect._\n\nimport effectie.core._\nimport effectie.syntax.all._\n\nimport loggerf.core._\nimport loggerf.syntax.all._\n\ndef foo[F[_]: Fx: Monad: Log](n: Int): F[Option[Int]] =\n  (for {\n    a <- OptionT(effectOf(n.some)).log(\n           ifEmpty = error("a is empty"),\n           a => debug(s"a is $a")\n         )\n    b <- OptionT(effectOf(none[Int])).log(\n           error("b is empty"),\n           b => debug(s"b is $b")\n         )\n    c <- OptionT(effectOf(123.some)).log(\n           warn("c is empty"),\n           c => debug(s"c is $c")\n         )\n  } yield c).value\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import loggerf.logger._\n\n// or Slf4JLogger.slf4JLogger[MyClass]\nimplicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("MyLogger")\n// canLog: CanLog = loggerf.logger.Slf4JLogger@4c36aa49\n\nimport effectie.instances.ce2.fx._\nimport loggerf.instances.cats._\n\nfoo[IO](1).unsafeRunSync() // You expect None here.\n// res5: Option[Int] = None\n'})}),"\n",(0,t.jsx)(n.p,{children:"With logs like"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"00:17:33.983 [main] DEBUG MyLogger - a is 1\n00:17:33.995 [main] ERROR MyLogger - b is empty\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"log-with-loggerf-eithert",children:"Log with LoggerF (EitherT)"}),"\n",(0,t.jsxs)(n.p,{children:["Another example with ",(0,t.jsx)(n.code,{children:"EitherT"})," (",(0,t.jsx)(n.code,{children:"F[Either[A, B]]"})," case is similar),"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import cats._\nimport cats.data._\nimport cats.syntax.all._\nimport cats.effect._\n\nimport effectie.core._\nimport effectie.syntax.all._\n\nimport loggerf.core._\nimport loggerf.syntax.all._\n\ndef foo[F[_]: Fx: Monad: Log](n: Int): F[Either[String, Int]] =\n  (for {\n    a <- EitherT(effectOf(n.asRight[String])).log(\n           err => error(s"Error: $err"),\n           a => debug(s"a is $a")\n         )\n    b <- EitherT(effectOf("Some Error".asLeft[Int])).log(\n           err => error(s"Error: $err"),\n            b => debug(s"b is $b")\n         )\n    c <- EitherT(effectOf(123.asRight[String])).log(\n           err => warn(s"Error: $err"),\n           c => debug(s"c is $c")\n         )\n  } yield c).value\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import loggerf.logger._\n\n// or Slf4JLogger.slf4JLogger[MyClass]\nimplicit val canLog: CanLog = Slf4JLogger.slf4JCanLog("MyLogger")\n// canLog: CanLog = loggerf.logger.Slf4JLogger@5bc87206\n\nimport effectie.instances.ce2.fx._\nimport loggerf.instances.cats._\n\nfoo[IO](1).unsafeRunSync() // You expect Left("Some Error") here.\n// res7: Either[String, Int] = Left(value = "Some Error")\n'})}),"\n",(0,t.jsx)(n.p,{children:"With logs like"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"00:40:48.663 [main] DEBUG MyLogger - a is 1\n00:40:48.667 [main] ERROR MyLogger - Error: Some Error\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"Please check out"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/cats/",children:"LoggerF for Cats"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5162:(e,n,l)=>{l.d(n,{Z:()=>o});l(7294);var t=l(512);const r={tabItem:"tabItem_Ymn6"};var s=l(5893);function o(e){let{children:n,hidden:l,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,o),hidden:l,children:n})}},4866:(e,n,l)=>{l.d(n,{Z:()=>L});var t=l(7294),r=l(512),s=l(2466),o=l(6550),a=l(469),i=l(1980),c=l(7392),g=l(12);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:l}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:l,attributes:t,default:r}}=e;return{value:n,label:l,attributes:t,default:r}}))}(l);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,l])}function u(e){let{value:n,tabValues:l}=e;return l.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:l}=e;const r=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:l}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return l??null}({queryString:n,groupId:l});return[(0,i._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function p(e){const{defaultValue:n,queryString:l=!1,groupId:r}=e,s=h(e),[o,i]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:l}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${l.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=l.find((e=>e.default))??l[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,d]=f({queryString:l,groupId:r}),[p,b]=function(e){let{groupId:n}=e;const l=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,g.Nk)(l);return[r,(0,t.useCallback)((e=>{l&&s.set(e)}),[l,s])]}({groupId:r}),j=(()=>{const e=c??p;return u({value:e,tabValues:s})?e:null})();(0,a.Z)((()=>{j&&i(j)}),[j]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=l(2389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=l(5893);function v(e){let{className:n,block:l,selectedValue:t,selectValue:o,tabValues:a}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),g=e=>{const n=e.currentTarget,l=i.indexOf(n),r=a[l].value;r!==t&&(c(n),o(r))},d=e=>{let n=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const l=i.indexOf(e.currentTarget)+1;n=i[l]??i[0];break}case"ArrowLeft":{const l=i.indexOf(e.currentTarget)-1;n=i[l]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},n),children:a.map((e=>{let{value:n,label:l,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>i.push(e),onKeyDown:d,onClick:g,...s,className:(0,r.Z)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":t===n}),children:l??n},n)}))})}function m(e){let{lazy:n,children:l,selectedValue:r}=e;const s=(Array.isArray(l)?l:[l]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=p(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",j.tabList),children:[(0,x.jsx)(v,{...e,...n}),(0,x.jsx)(m,{...e,...n})]})}function L(e){const n=(0,b.Z)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(n))}},9329:(e,n,l)=>{l.d(n,{Z:()=>t});const t=l.p+"assets/images/logger-f-200x200-e023b9d5a1ab8fc4da000364a8c266df.png"},1151:(e,n,l)=>{l.d(n,{Z:()=>a,a:()=>o});var t=l(7294);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);